!function(i,t){if("function"==typeof define&&define.amd)define(["exports"],t);else if("undefined"!=typeof exports)t(exports);else{var e={exports:{}};t(e.exports),i.BrowserNotif=e.exports}}(this,function(i){"use strict";function t(i,t){if(!(i instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(i,"__esModule",{value:!0});var e=Object.assign||function(i){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(i[n]=e[n])}return i},n=function(){function i(i,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,n.key,n)}}return function(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}}(),o=function(){function i(n){t(this,i),this.options={},this.notifOptions={},this.data={},this.timeout=0,this.Permission={Default:"default",Granted:"granted",Denied:"denied"},n&&e(this.options,n),this._setOptions(this.options),n.timeout&&(this.timeout=n.timeout),i.isSupported()||console.warn("This browser does not support system notifications")}return n(i,[{key:"_setOptions",value:function(i){for(var t in i)["timeout","serviceWorkerPath"].indexOf(t)==-1&&(this.notifOptions[t]=i[t])}},{key:"_registerServiceWorker",value:function(){"serviceWorker"in navigator&&navigator.serviceWorker.register(this.options.serviceWorkerPath||"sw.min.js").then(function(i){console.log("Service Worker is ready :",i)}).catch(function(i){return console.warn("BrowserNotif: ",i)})}},{key:"_showNotifServiceWorker",value:function(){var i=this;return new Promise(function(t,e){if(!("serviceWorker"in navigator))throw new Error("BrowserNotif: serviceWorker not available");navigator.serviceWorker.ready.then(function(e){i.notifOptions.tag||(i.notifOptions.tag="browserNotif_"+Math.random().toString().substr(3,10)),Object.keys(i.data).length>0&&(i.notifOptions.data=JSON.stringify(i.data)),e.showNotification(i.title,i.notifOptions).then(function(i){t(i)})}).catch(function(i){throw new Error("BrowserNotif: "+i)})})}},{key:"_getNotifServiceWorker",value:function(){var i=this;return new Promise(function(t,e){"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(n){n.getNotifications({tag:i.notifOptions.tag}).then(function(i){i.length>0?t(i[0]):e("BrowserNotif: Notification not found")})}).catch(function(i){e("BrowserNotif: "+i)})})}},{key:"notify",value:function(t,e,n){var o=this;return new Promise(function(r,s){i.isSupported()||(alert(t+"\n\n"+e),r()),o._validateTitle(t),o.title=t,o.notifOptions.body=e,o.Permission.Granted===Notification.permission?o._notify(n).then(function(){return r()}):o.Permission.Denied!==Notification.permission?i.requestPermission().then(function(i){o.Permission.Granted===i&&o._notify(n).then(function(){return r()})}):s("User denied the notification permission")})}},{key:"_validateTitle",value:function(i){if("string"!=typeof i)throw new Error("BrowserNotif: Title of notification must be a string");if(""==i.trim())throw new Error("BrowserNotif: Title of notification could not be empty")}},{key:"_notify",value:function(i){var t=this;return new Promise(function(e,n){t.isMobile()?Promise.resolve().then(function(){return t._registerServiceWorker(),t._prepareClickOnServiceWorker.apply(t,[i]),t._showNotifServiceWorker()}).then(function(i){t._getNotifServiceWorker().then(function(i){t.notification=i,e()})}).catch(function(i){n(i)}):Promise.resolve().then(function(){t.notification instanceof Notification&&t.notification.close(),t.notification=new Notification(t.title,t.notifOptions),t._prepareNotifEvent.apply(t,[i]),t._closeNotification(),e()}).catch(function(i){n(i)})})}},{key:"_closeNotification",value:function(){this.timeout>0&&this.notification instanceof Notification&&setTimeout(this.notification.close.bind(this.notification),1e3*this.timeout)}},{key:"_prepareNotifEvent",value:function(i){var t=this;"undefined"!=typeof i&&this.notification instanceof Notification&&("function"==typeof i.click&&(this.notification.onclick=function(){t.notification.close(),i.click.call(t)}),"function"==typeof i.error&&(this.notification.onerror=function(){i.error.call(t)}))}},{key:"_prepareClickOnServiceWorker",value:function(i){"undefined"!=typeof i&&"function"==typeof i.clickOnServiceWorker&&(this.data.clickOnServiceWorker=i.clickOnServiceWorker.toString())}},{key:"close",value:function(){this.notification instanceof Notification&&this.notification.close()}},{key:"isMobile",value:function(){var i=new RegExp("\n                                    Android|webOS|iPhone|iPad|\n                                    BlackBerry|Windows Phone|\n                                    Opera Mini|IEMobile|Mobile","i");return i.test(navigator.userAgent)}}],[{key:"isSupported",value:function(){return"Notification"in i.Win}},{key:"requestPermission",value:function(){return new Promise(function(i,t){Notification.requestPermission().then(function(t){i(t)}).catch(function(i){return t(i)})})}}]),i}();i.default=o,o.Win=window});
//# sourceMappingURL=BrowserNotif.min.js.map
