{"version":3,"sources":["BrowserNotif.js"],"names":["global","factory","define","amd","exports","mod","BrowserNotif","this","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","options","notifOptions","data","timeout","Permission","Default","Granted","Denied","_setOptions","isSupported","console","warn","option","indexOf","navigator","serviceWorker","register","serviceWorkerPath","then","serviceWorkerRegistration","log","catch","e","_this","Promise","resolve","reject","Error","ready","registration","tag","Math","random","toString","substr","keys","JSON","stringify","showNotification","title","notificationEvent","_this2","getNotifications","notifications","body","notifEvent","_this3","alert","_validateTitle","Notification","permission","_notify","requestPermission","trim","_this4","isMobile","_registerServiceWorker","_prepareClickOnServiceWorker","apply","_showNotifServiceWorker","_getNotifServiceWorker","notification","err","close","_prepareNotifEvent","_closeNotification","setTimeout","bind","_this5","click","onclick","error","onerror","clickOnServiceWorker","mobileExp","RegExp","test","userAgent","Win","default","window"],"mappings":"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","file":"BrowserNotif.min.js","sourcesContent":["(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports);\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports);\n        global.BrowserNotif = mod.exports;\n    }\n})(this, function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n\n        return target;\n    };\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    var _createClass = function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n\n    var BrowserNotif = function () {\n        /**\n         * BrowserNotif constructor\n         * @param  {BrowserNotifOptions} options Optional options in object literal form\n         * e.g {icon: 'image.png', timeout: 10}\n         */\n        function BrowserNotif(options) {\n            _classCallCheck(this, BrowserNotif);\n\n            /**\n             * BrowserNotif configuration\n             * @type {BrowserNotifOptions}\n             */\n            this.options = {};\n            /**\n             * Notification Options\n             * @type {NotificationOptions}\n             */\n            this.notifOptions = {};\n            /**\n             * Arbitrary data\n             * @type {BrowserNotifData}\n             */\n            this.data = {};\n            /**\n             * How long notification will appear in second. Set to 0 to make always visible\n             * @type {number}\n             */\n            this.timeout = 0;\n            /**\n             * Permission Type\n             * @type {PermissionInterface}\n             */\n            this.Permission = {\n                Default: 'default',\n                Granted: 'granted',\n                Denied: 'denied'\n            };\n            if (options) {\n                _extends(this.options, options);\n            }\n            this._setOptions(this.options);\n            if (options.timeout) {\n                this.timeout = options.timeout;\n            }\n            if (!BrowserNotif.isSupported()) {\n                console.warn('This browser does not support system notifications');\n            }\n        }\n        /**\n         * Check is browser support for system notification\n         * @return {boolean}\n         */\n\n\n        _createClass(BrowserNotif, [{\n            key: '_setOptions',\n            value: function _setOptions(options) {\n                for (var option in options) {\n                    if (['timeout', 'serviceWorkerPath'].indexOf(option) == -1) {\n                        this.notifOptions[option] = options[option];\n                    }\n                }\n            }\n        }, {\n            key: '_registerServiceWorker',\n            value: function _registerServiceWorker() {\n                if ('serviceWorker' in navigator) {\n                    navigator.serviceWorker.register(this.options.serviceWorkerPath || 'sw.min.js').then(function (serviceWorkerRegistration) {\n                        console.log('Service Worker is ready :', serviceWorkerRegistration);\n                    }).catch(function (e) {\n                        return console.warn('BrowserNotif: ', e);\n                    });\n                }\n            }\n        }, {\n            key: '_showNotifServiceWorker',\n            value: function _showNotifServiceWorker() {\n                var _this = this;\n\n                return new Promise(function (resolve, reject) {\n                    if ('serviceWorker' in navigator) {\n                        navigator.serviceWorker.ready.then(function (registration) {\n                            if (!_this.notifOptions.tag) {\n                                _this.notifOptions.tag = 'browserNotif_' + Math.random().toString().substr(3, 10);\n                            }\n                            if (Object.keys(_this.data).length > 0) {\n                                _this.notifOptions.data = JSON.stringify(_this.data);\n                            }\n                            registration.showNotification(_this.title, _this.notifOptions).then(function (notificationEvent) {\n                                resolve(notificationEvent);\n                            });\n                        }).catch(function (e) {\n                            throw new Error('BrowserNotif: ' + e);\n                        });\n                    } else {\n                        throw new Error('BrowserNotif: serviceWorker not available');\n                    }\n                });\n            }\n        }, {\n            key: '_getNotifServiceWorker',\n            value: function _getNotifServiceWorker() {\n                var _this2 = this;\n\n                return new Promise(function (resolve, reject) {\n                    if ('serviceWorker' in navigator) {\n                        navigator.serviceWorker.ready.then(function (registration) {\n                            registration.getNotifications({ tag: _this2.notifOptions.tag }).then(function (notifications) {\n                                if (notifications.length > 0) {\n                                    resolve(notifications[0]);\n                                } else {\n                                    reject('BrowserNotif: Notification not found');\n                                }\n                            });\n                        }).catch(function (e) {\n                            reject('BrowserNotif: ' + e);\n                        });\n                    }\n                });\n            }\n        }, {\n            key: 'notify',\n            value: function notify(title, body, notifEvent) {\n                var _this3 = this;\n\n                return new Promise(function (resolve, reject) {\n                    if (!BrowserNotif.isSupported()) {\n                        alert(title + '\\n\\n' + body);\n                        resolve();\n                    }\n                    _this3._validateTitle(title);\n                    _this3.title = title;\n                    _this3.notifOptions.body = body;\n                    if (_this3.Permission.Granted === Notification.permission) {\n                        _this3._notify(notifEvent).then(function () {\n                            return resolve();\n                        });\n                    } else if (_this3.Permission.Denied !== Notification.permission) {\n                        BrowserNotif.requestPermission().then(function (permission) {\n                            if (_this3.Permission.Granted === permission) {\n                                _this3._notify(notifEvent).then(function () {\n                                    return resolve();\n                                });\n                            }\n                        });\n                    } else {\n                        reject('User denied the notification permission');\n                    }\n                });\n            }\n        }, {\n            key: '_validateTitle',\n            value: function _validateTitle(title) {\n                if (typeof title != 'string') {\n                    throw new Error('BrowserNotif: Title of notification must be a string');\n                } else if (title.trim() == '') {\n                    throw new Error('BrowserNotif: Title of notification could not be empty');\n                }\n            }\n        }, {\n            key: '_notify',\n            value: function _notify(notifEvent) {\n                var _this4 = this;\n\n                return new Promise(function (resolve, reject) {\n                    if (_this4.isMobile()) {\n                        Promise.resolve().then(function () {\n                            _this4._registerServiceWorker();\n                            _this4._prepareClickOnServiceWorker.apply(_this4, [notifEvent]);\n                            return _this4._showNotifServiceWorker();\n                        }).then(function (notificationEvent) {\n                            _this4._getNotifServiceWorker().then(function (notification) {\n                                _this4.notification = notification;\n                                resolve();\n                            });\n                        }).catch(function (err) {\n                            reject(err);\n                        });\n                    } else {\n                        Promise.resolve().then(function () {\n                            if (_this4.notification instanceof Notification) {\n                                _this4.notification.close();\n                            }\n                            _this4.notification = new Notification(_this4.title, _this4.notifOptions);\n                            _this4._prepareNotifEvent.apply(_this4, [notifEvent]);\n                            _this4._closeNotification();\n                            resolve();\n                        }).catch(function (err) {\n                            reject(err);\n                        });\n                    }\n                });\n            }\n        }, {\n            key: '_closeNotification',\n            value: function _closeNotification() {\n                if (this.timeout > 0 && this.notification instanceof Notification) {\n                    setTimeout(this.notification.close.bind(this.notification), this.timeout * 1e3);\n                }\n            }\n        }, {\n            key: '_prepareNotifEvent',\n            value: function _prepareNotifEvent(notifEvent) {\n                var _this5 = this;\n\n                if (typeof notifEvent != 'undefined' && this.notification instanceof Notification) {\n                    if (typeof notifEvent.click == 'function') {\n                        this.notification.onclick = function () {\n                            _this5.notification.close();\n                            notifEvent.click.call(_this5);\n                        };\n                    }\n                    if (typeof notifEvent.error == 'function') {\n                        this.notification.onerror = function () {\n                            notifEvent.error.call(_this5);\n                        };\n                    }\n                }\n            }\n        }, {\n            key: '_prepareClickOnServiceWorker',\n            value: function _prepareClickOnServiceWorker(notifEvent) {\n                if (typeof notifEvent != 'undefined' && typeof notifEvent.clickOnServiceWorker == 'function') {\n                    this.data.clickOnServiceWorker = notifEvent.clickOnServiceWorker.toString();\n                }\n            }\n        }, {\n            key: 'close',\n            value: function close() {\n                if (this.notification instanceof Notification) {\n                    this.notification.close();\n                }\n            }\n        }, {\n            key: 'isMobile',\n            value: function isMobile() {\n                var mobileExp = new RegExp('\\n                                    Android|webOS|iPhone|iPad|\\n                                    BlackBerry|Windows Phone|\\n                                    Opera Mini|IEMobile|Mobile', 'i');\n                return mobileExp.test(navigator.userAgent);\n            }\n        }], [{\n            key: 'isSupported',\n            value: function isSupported() {\n                if (!(\"Notification\" in BrowserNotif.Win)) {\n                    return false;\n                }\n                return true;\n            }\n        }, {\n            key: 'requestPermission',\n            value: function requestPermission() {\n                return new Promise(function (resolve, reject) {\n                    Notification.requestPermission().then(function (permission) {\n                        resolve(permission);\n                    }).catch(function (err) {\n                        return reject(err);\n                    });\n                });\n            }\n        }]);\n\n        return BrowserNotif;\n    }();\n\n    exports.default = BrowserNotif;\n\n    /**\n     * Readonly Win property\n     * @type {Window}\n     */\n    BrowserNotif.Win = window;\n});"]}